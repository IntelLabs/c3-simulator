#!/usr/bin/env bash

set -euo pipefail

SCRIPT_PATH_NOLINK=$(readlink -f -- "${BASH_SOURCE[0]}")
SCRIPT_DIR="$( cd -- "$( dirname -- "${SCRIPT_PATH_NOLINK}" )" &> /dev/null && pwd )"
EDK2_SRC_DIR="$( cd -- "${SCRIPT_DIR}"/.. &> /dev/null && pwd )"
PROJECT_DIR="$( cd -- "${SCRIPT_DIR}"/../.. &> /dev/null && pwd )"

COMPILER=${COMPILER:="GCC5"}
#COMPILER="GCC5"
if [[ ${debug:=1} != 0 ]]; then
    build_path="${EDK2_SRC_DIR}/Build/SimicsOpenBoardPkg/BoardX58Ich10/DEBUG_$COMPILER/X64"
else
    build_path="${EDK2_SRC_DIR}/Build/SimicsOpenBoardPkg/BoardX58Ich10/RELEASE_$COMPILER/X64"
fi

readonly warning_msg="// Generated by GenExtraConstants.sh, don't edit by hand"

readonly Demo1_Bob_debug="$build_path/Demo1_Bob.debug"
Demo1_Bob_OffsetGLoadImage=0x0000000000001ae8
Demo1_Bob_OffsetDemo1BobDataProvider=0x0000000000000763
Demo1_Bob_OffsetAccessKeyProtocol=0x0
if [[ -e "$Demo1_Bob_debug" ]]; then
    Demo1_Bob_OffsetAccessKeyProtocol=0x$(
        objdump -t "$build_path/Demo1_Bob.debug" |
        grep -P '\bAccessKeyProtocol\b' |
        awk '{print $1}')
    Demo1_Bob_OffsetGLoadImage=0x$(
        objdump -t "$build_path/Demo1_Bob.debug" |
        grep LoadImage |
        awk '{print $1}')
    Demo1_Bob_OffsetDemo1BobDataProvider=0x$(
        objdump -d "$build_path/Demo1_Bob.debug" |
        grep 'Demo1BobDataProvider>:' |
        awk '{print $1}')
fi

readonly HpetTimerDxe_debug="$build_path/HpetTimerDxe.debug"
HpetTimerDxe_OffsetmTimerPeriod=0x0000000000003600
HpetTimerDxe_OffsetmTimerNotifyFunction=0x00000000000035f0
if [[ -e "$HpetTimerDxe_debug" ]]; then
    HpetTimerDxe_OffsetmTimerPeriod=0x$(
        objdump -t "$HpetTimerDxe_debug" |
        grep mTimerPeriod$ |
        awk '{print $1}')
    HpetTimerDxe_OffsetmTimerNotifyFunction=0x$(
        objdump -t "$HpetTimerDxe_debug" |
        grep mTimerNotifyFunction$ |
        awk '{print $1}')
fi

debug_bin="$build_path/Demo1_Access_Key.debug"
Demo1_Access_Key_Offset_accessKeyLock=0x0
Demo1_Access_Key_Offset_gDemo1_Access_Key_Protocol=0x0

if [[ -e "$debug_bin" ]]; then
    Demo1_Access_Key_Offset_accessKeyLock=0x$(
        objdump -t "$debug_bin" |
        grep accessKeyLock$ |
        awk '{print $1}')
    Demo1_Access_Key_Offset_gDemo1_Access_Key_Protocol=0x$(
        objdump -t "$debug_bin" |
        grep gDemo1_Access_Key_Protocol$ |
        awk '{print $1}')
else
    echo "Cannot find $debug_bin"
fi

echo_define() {
    local var="$1"
    echo "#define $1 ${!var}"
}

update_Bob_Address_Leak() {
    local def_header="${EDK2_SRC_DIR}/edk2/MdeModulePkg/Bob_Address_Leak/Bob_Address_Leak.defines.h"

    if [[ -e "$(dirname $def_header)" ]]; then
        echo "------ Writing to $def_header"
        {
            echo "$warning_msg"
            echo_define Demo1_Bob_OffsetAccessKeyProtocol
            echo_define Demo1_Access_Key_Offset_accessKeyLock
            echo_define Demo1_Access_Key_Offset_gDemo1_Access_Key_Protocol
            # echo "#define Demo1_Access_Key_Offset_accessKeyLock $Demo1_Access_Key_Offset_accessKeyLock"
            # echo "#define Demo1_Access_Key_Offset_gDemo1_Access_Key_Protocol $Demo1_Access_Key_Offset_gDemo1_Access_Key_Protocol"
        } | tee "$def_header"
        echo "------"
    else
        echo "Cannot find $(dirname $def_header), skipping update"
    fi
}

update_Null_Master_Key() {
    local fn="${EDK2_SRC_DIR}/edk2/PcAtChipsetPkg/HpetTimerDxe/HpetTimer.c"
    local def_header="${EDK2_SRC_DIR}/edk2/MdeModulePkg/Null_Master_Key/Null_Master_Key.defines.h"

    if [[ -e "$(dirname $def_header)" ]]; then
        echo "Writing $def_header"
        {
            echo "$warning_msg"
            echo "#define Demo1_Bob_OffsetGLoadImage $Demo1_Bob_OffsetGLoadImage"
            echo "#define Demo1_Bob_OffsetDemo1BobDataProvider $Demo1_Bob_OffsetDemo1BobDataProvider"
        } | tee "$def_header"
    else
        echo "Cannot find $(dirname $def_header), skipping update"
    fi
}

update_Timer_Hijack() {
    local fn="${EDK2_SRC_DIR}/edk2/PcAtChipsetPkg/HpetTimerDxe/HpetTimer.c"
    local def_header="${EDK2_SRC_DIR}/edk2/MdeModulePkg/Timer_Hijack/Timer_Hijack.defines.h"

    if [[ -e "$(dirname $def_header)" ]]; then
        echo "Writing $def_header"
        {
            echo "$warning_msg"
            echo "#define OffsetmTimerNotifyFunction $HpetTimerDxe_OffsetmTimerNotifyFunction"
            echo "#define OffsetmTimerPeriod $HpetTimerDxe_OffsetmTimerPeriod"
        } | tee "$def_header"
    else
        echo "Cannot find $(dirname $def_header), skipping update"
    fi
}

update_Timer_Hijack
update_Null_Master_Key
update_Bob_Address_Leak
